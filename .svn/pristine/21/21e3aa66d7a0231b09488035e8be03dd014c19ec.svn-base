<?xml version="1.0"?>
<project name="PowerStone" basedir="." default="test">
	<property file="build.properties" />

	<property name="src.dir" value="src" />
	<property name="classes.dir" value="classes" />
	<property name="web.dir" value="web" />
	<property name="test.src" value="test" />
	<property name="dist.dir" value="dist" />
	<property name="build.dir" value="build" />
	<property name="test.dir" value="build/test" />
	<property name="xdoclet-lib.dir" value="xdoclet-lib" />
	<property name="webapp.name" value="ps_console" />

	<property name="hibernate.connection.driver_class" value="oracle.jdbc.driver.OracleDriver" />
	<property name="hibernate.connection.url" value="jdbc:oracle:thin:@127.0.0.1:1521:POWERSTONE" />
	<property name="hibernate.connection.username" value="root" />
	<property name="hibernate.connection.password" value="password" />

	<property environment="env" />
	<property name="tomcat.home" value="${env.CATALINA_HOME}" />

	<path id="classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${xdoclet-lib.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${tomcat.home}/common/lib">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build.dir}/classes" />
		<pathelement path="${test.dir}/classes" />
	</path>

	<target name="help">
		<echo message="" />
		<echo message="${webapp.name} build file" />
		<echo message="------------------------------------" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="compile   --> Compile all Java files" />
		<echo message="test      --> Runs JUnit tests" />
		<echo message="war       --> Package as WAR file" />
		<echo message="deploy    --> Deploy application as directory" />
		<echo message="deploywar --> Deploy application as a WAR file" />
		<echo message="" />
		<echo message="install   --> Install application in Tomcat" />
		<echo message="remove    --> Remove application from Tomcat" />
		<echo message="reload    --> Reload application in Tomcat" />
		<echo message="start     --> Start Tomcat application" />
		<echo message="stop      --> Stop Tomcat application" />
		<echo message="list      --> List Tomcat applications" />
		<echo message="" />
		<echo message="clean     --> Deletes compiled classes and WAR" />
		<echo message="hibernate    --> Creates *.hbm.xml" />
		<echo message="schemaexport    --> Creates db scripts" />
	</target>

	<target name="compile" description="Compile main source tree java files">
		<mkdir dir="${build.dir}/classes" />
		<javac destdir="${build.dir}/classes" target="${jdk.version}" srcdir="${src.dir}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<!--compilerarg value="-Xlint:unchecked"/-->
			<sourcepath path="${src.dir}" />
			<classpath refid="classpath" />
		</javac>
		<!-- compile tests -->
		<mkdir dir="${test.dir}/classes" />
		<javac destdir="${test.dir}/classes" target="${jdk.version}" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${test.src}" />
			<classpath>
				<path refid="classpath" />
				<path location="${build.dir}/classes" />
			</classpath>
		</javac>
		<!-- Copy hibernate mapping files to ${build.dir}/classes -->
		<copy todir="${build.dir}/classes">
			<fileset dir="${src.dir}" includes="**/*.hbm.xml,**/*.xml" />
		</copy>
		<native2ascii src="${src.dir}" dest="${build.dir}/classes" includes="*.properties" encoding="UTF-8" />
		<copy todir="web/WEB-INF/classes">
			<fileset dir="${build.dir}/classes" />
		</copy>
	</target>

	<target name="test" depends="compile,hibernate" description="Runs JUnit tests">
		<!-- Check that junit.jar is in $ANT_HOME/lib -->
		<available classname="junit.framework.TestCase" property="junit.present" />
		<fail unless="junit.present" message="Please copy web/WEB-INF/lib/junit.jar into ${env.ANT_HOME}/lib" />

		<mkdir dir="${test.dir}/data" />
		<junit printsummary="yes" fork="true" errorProperty="test.failed" failureProperty="test.failed">
			<classpath>
				<path refid="classpath" />
				<path location="${build.dir}/classes" />
				<path location="${test.dir}/classes" />
				<path location="web/WEB-INF/classes" />
				<path location="web" />
			</classpath>
			<formatter type="xml" />
			<formatter type="brief" usefile="false" />
			<batchtest todir="${test.dir}/data" if="testcase">
				<fileset dir="${test.dir}/classes">
					<include name="**/*${testcase}*" />
					<exclude name="**/*TestCase.class" />
				</fileset>
			</batchtest>
			<batchtest todir="${test.dir}/data" unless="testcase">
				<fileset dir="${test.dir}/classes">
					<include name="**/*Test.class*" />
				</fileset>
			</batchtest>
		</junit>

		<fail if="test.failed">
          Unit tests failed. For error messages, check the log files in
          ${test.dir}/data or run "ant test-reports"
          to generate reports at ${test.dir}/reports.</fail>
	</target>

	<target name="test-reports" description="Generate test reports">
		<mkdir dir="${test.dir}/reports" />
		<junitreport todir="${test.dir}">
			<fileset dir="${test.dir}/data">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.dir}/reports" />
		</junitreport>
	</target>

	<target name="war" depends="compile" description="Packages app as WAR">
		<mkdir dir="${dist.dir}" />
		<war destfile="${dist.dir}/${webapp.name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<classes dir="${build.dir}/classes" />
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
				<exclude name="WEB-INF/classes/**/*.*" />
				<exclude name="**/web.xml" />
				<exclude name="**/junit.jar" />
				<exclude name="**/jsp-api.jar" />
				<exclude name="**/*mock.jar" />
				<exclude name="**/strutstestcase*.jar" />
			</fileset>
		</war>
	</target>

	<target name="deploy" depends="compile" description="Deploy application">
		<copy todir="${tomcat.home}/webapps/${webapp.name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
				<exclude name="**/junit.jar" />
				<exclude name="**/jsp-api.jar" />
				<exclude name="**/*mock.jar" />
				<exclude name="**/strutstestcase*.jar" />
			</fileset>
		</copy>
		<copy todir="${tomcat.home}/webapps/${webapp.name}/WEB-INF/classes" preservelastmodified="true">
			<fileset dir="${build.dir}/classes" />
		</copy>
	</target>

	<target name="deploywar" depends="war" description="Deploy application as a WAR file">
		<copy todir="${tomcat.home}/webapps" preservelastmodified="true">
			<fileset dir=".">
				<include name="${dist.dir}/*.war" />
			</fileset>
		</copy>
	</target>

	<target name="clean" description="Clean output directories">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Tomcat Ant Tasks -->
	<taskdef file="tomcatTasks.properties">
		<classpath>
			<pathelement path="${tomcat.home}/server/lib/catalina-ant.jar" />
		</classpath>
	</taskdef>

	<target name="install" description="Install application in Tomcat" depends="war">
		<deploy url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${webapp.name}" war="file:${dist.dir}/${webapp.name}.war" />
	</target>

	<target name="remove" description="Remove application from Tomcat">
		<undeploy url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${webapp.name}" />
	</target>

	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${webapp.name}" />
	</target>

	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${webapp.name}" />
	</target>

	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${webapp.name}" />
	</target>

	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>

	<!-- Creates release (source) distribution -->
	<target name="dist" depends="clean" description="create zip and tar.gz of ${webapp.name} for distribution">
		<property name="archive.name" value="${webapp.name}-${webapp.version}" />
		<mkdir dir="${dist.dir}" />
		<property name="archive.target" value="${dist.dir}/${archive.name}" />
		<zip zipfile="${archive.target}.zip">
			<zipfileset prefix="${webapp.name}" dir="${basedir}">
				<patternset id="srcfiles">
					<exclude name="*.log" />
					<exclude name="junit*.properties" />
					<exclude name="**/*~" />
					<exclude name="**/*.bak" />
					<exclude name="*/**.java.txt" />
					<exclude name="${build.dir}/**" />
					<exclude name="${dist.dir}/**" />
					<exclude name="db/**" />
					<exclude name="sandbox/**" />
					<exclude name=".#**" />
					<include name="**" />
				</patternset>
			</zipfileset>
		</zip>
		<tar tarfile="${archive.target}.tar">
			<tarfileset dir="${basedir}" mode="644" prefix="${webapp.name}" username="ant" group="ant">
				<patternset refid="srcfiles" />
			</tarfileset>
		</tar>
		<gzip zipfile="${archive.target}.tar.gz" src="${archive.target}.tar" />
		<delete file="${archive.target}.tar" />
	</target>

	<target name="jar-lib" depends="hibernate,compile" description="Create JAR for app">
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/powerstone_lib.jar">
			<fileset dir="${build.dir}/classes">
				<include name="**/*.*" />
			</fileset>
		</jar>
	</target>

	<taskdef name="hibernatedoclet" classname="xdoclet.modules.hibernate.HibernateDocletTask" classpathref="classpath" />
	<target name="hibernate" description="Generate mapping documents">
		<echo>+---------------------------------------------------+</echo>
		<echo>|   R U N N I N G   H I B E R N A T E D O C L E T   |</echo>
		<echo>+---------------------------------------------------+</echo>
		<hibernatedoclet destdir="./src" excludedtags="@version,@author,@todo,@see" addedtags="@xdoclet-generated at ${TODAY},@copyright The XDoclet Team,@author XDoclet,@version ${version}" force="false" verbose="true">
			<fileset dir="./src">
				<include name="org/powerstone/workflow/model/*.java" />
				<include name="org/powerstone/ca/model/*.java" />
			</fileset>
			<hibernate version="3.0" />
		</hibernatedoclet>
		<copy todir="${build.dir}/classes" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>

	<target name="schemaexport" depends="hibernate">
		<taskdef name="schemaexport" classname="org.hibernate.tool.hbm2ddl.SchemaExportTask" classpathref="classpath" classpath="${classes.dir}" />
		<schemaexport properties="${web.dir}/WEB-INF/classes/ps_database.properties" output="${build.dir}/dll.sql">
			<fileset dir="${src.dir}">
				<include name="**/*.hbm.xml" />
			</fileset>
		</schemaexport>
	</target>
	
	<target name="music">
		<sound>
			<success source="ok.wav" duration="500"/>
			<fail source="ok.wav" loops="2"/>
		</sound>
	</target>
	
	<target name="success" depends="music"/>
	<target name="fail" depends="music">
		<fail/>
	</target>
	
</project>